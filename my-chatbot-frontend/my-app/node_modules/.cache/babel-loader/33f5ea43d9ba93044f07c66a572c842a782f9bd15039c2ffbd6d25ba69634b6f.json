{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Xilence\\\\DEcloud\\\\my-chatbot-frontend\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [role, setRole] = useState('Frontend Developer');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!inputMessage.trim()) return;\n    addMessage(inputMessage, 'user');\n    try {\n      const response = await fetch('http://localhost:3000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: inputMessage,\n          role\n        })\n      });\n      const data = await response.json();\n      addMessage(data.response || 'No response from server.', 'bot');\n    } catch (error) {\n      console.error('Error:', error);\n      addMessage('Error: Unable to communicate with the server.', 'bot');\n    }\n    setInputMessage('');\n  };\n  const handleWrapUp = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: '__WRAP_UP__',\n          role\n        })\n      });\n      const data = await response.json();\n      addMessage(data.response || 'No response from server.', 'bot');\n    } catch (error) {\n      console.error('Error:', error);\n      addMessage('Error: Could not finish the interview.', 'bot');\n    }\n  };\n  const addMessage = (text, sender) => {\n    setMessages(prev => [...prev, {\n      text,\n      sender\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mock Interview Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: role,\n        onChange: e => setRole(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Frontend Developer\",\n          children: \"Frontend Developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Backend Developer\",\n          children: \"Backend Developer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Data Scientist\",\n          children: \"Data Scientist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"UX Designer\",\n          children: \"UX Designer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"messages-list\",\n        children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `message ${msg.sender}`,\n          children: msg.text\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          placeholder: \"Your response...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleWrapUp,\n          className: \"wrap-up-button\",\n          children: \"Finish Interview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JijQn/62ZkusMD1ghVB2ifE3Hvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","messages","setMessages","inputMessage","setInputMessage","role","setRole","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSubmit","event","preventDefault","trim","addMessage","response","fetch","method","headers","body","JSON","stringify","message","data","json","error","console","handleWrapUp","text","sender","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","msg","i","ref","onSubmit","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Xilence/DEcloud/my-chatbot-frontend/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [role, setRole] = useState('Frontend Developer');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!inputMessage.trim()) return;\r\n\r\n    addMessage(inputMessage, 'user');\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3000/api/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: inputMessage, role }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      addMessage(data.response || 'No response from server.', 'bot');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      addMessage('Error: Unable to communicate with the server.', 'bot');\r\n    }\r\n\r\n    setInputMessage('');\r\n  };\r\n\r\n  const handleWrapUp = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/api/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: '__WRAP_UP__', role }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      addMessage(data.response || 'No response from server.', 'bot');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      addMessage('Error: Could not finish the interview.', 'bot');\r\n    }\r\n  };\r\n\r\n  const addMessage = (text, sender) => {\r\n    setMessages((prev) => [...prev, { text, sender }]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"chat-window\">\r\n        <h2>Mock Interview Chatbot</h2>\r\n        <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n          <option value=\"Frontend Developer\">Frontend Developer</option>\r\n          <option value=\"Backend Developer\">Backend Developer</option>\r\n          <option value=\"Data Scientist\">Data Scientist</option>\r\n          <option value=\"UX Designer\">UX Designer</option>\r\n        </select>\r\n\r\n        <ul className=\"messages-list\">\r\n          {messages.map((msg, i) => (\r\n            <li key={i} className={`message ${msg.sender}`}>\r\n              {msg.text}\r\n            </li>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </ul>\r\n\r\n        <form onSubmit={handleSubmit} className=\"input-area\">\r\n          <input\r\n            type=\"text\"\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            placeholder=\"Your response...\"\r\n          />\r\n          <button type=\"submit\">Send</button>\r\n          <button onClick={handleWrapUp} className=\"wrap-up-button\">Finish Interview</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}