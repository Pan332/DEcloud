{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WIN11 64BIT\\\\Desktop\\\\DEcloud\\\\my-chatbot-frontend\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to the latest message when messages update\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Submit the user message\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (inputMessage.trim()) {\n      addMessage(inputMessage, 'user');\n      try {\n        const response = await fetch('http://localhost:3000/api/chat', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            message: inputMessage\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to communicate with server');\n        }\n        const data = await response.json();\n        if (data.response) {\n          addMessage(data.response, 'bot');\n        } else {\n          addMessage('Error: No response from the server.', 'bot');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        addMessage('Error: Unable to communicate with the server.', 'bot');\n      }\n      setInputMessage(''); // Clear input field\n    }\n  };\n\n  // Helper function to add a message\n  const addMessage = (text, sender) => {\n    setMessages(prevMessages => [...prevMessages, {\n      text,\n      sender\n    }]);\n  };\n\n  // Handle file selection\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n\n  // Upload the selected file (PDF)\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      addMessage('Please select a file to upload.', 'bot');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await fetch('http://localhost:3000/api/upload-pdf', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload file');\n      }\n      const data = await response.json();\n      if (data.url) {\n        addMessage(`File uploaded successfully! Access it [here](${data.url}).`, 'bot');\n      } else {\n        addMessage('Error: No response from the server.', 'bot');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      addMessage('Error: Unable to upload the file.', 'bot');\n    }\n    setSelectedFile(null); // Clear the selected file\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"messages-list\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"application/pdf\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFileUpload,\n          children: \"Upload PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0C+2oeeV2pYLlOazvsdRch4CaTQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","messages","setMessages","inputMessage","setInputMessage","selectedFile","setSelectedFile","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSubmit","event","preventDefault","trim","addMessage","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","error","console","text","sender","prevMessages","handleFileChange","file","target","files","handleFileUpload","formData","FormData","append","url","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","type","value","onChange","e","placeholder","accept","onClick","_c","$RefreshReg$"],"sources":["C:/Users/WIN11 64BIT/Desktop/DEcloud/my-chatbot-frontend/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css'; // Import your CSS file for styling\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Scroll to the latest message when messages update\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // Submit the user message\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (inputMessage.trim()) {\n      addMessage(inputMessage, 'user');\n      try {\n        const response = await fetch('http://localhost:3000/api/chat', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ message: inputMessage }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to communicate with server');\n        }\n\n        const data = await response.json();\n\n        if (data.response) {\n          addMessage(data.response, 'bot');\n        } else {\n          addMessage('Error: No response from the server.', 'bot');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        addMessage('Error: Unable to communicate with the server.', 'bot');\n      }\n      setInputMessage(''); // Clear input field\n    }\n  };\n\n  // Helper function to add a message\n  const addMessage = (text, sender) => {\n    setMessages((prevMessages) => [...prevMessages, { text, sender }]);\n  };\n\n  // Handle file selection\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n\n  // Upload the selected file (PDF)\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      addMessage('Please select a file to upload.', 'bot');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    try {\n      const response = await fetch('http://localhost:3000/api/upload-pdf', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to upload file');\n      }\n\n      const data = await response.json();\n      if (data.url) {\n        addMessage(`File uploaded successfully! Access it [here](${data.url}).`, 'bot');\n      } else {\n        addMessage('Error: No response from the server.', 'bot');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      addMessage('Error: Unable to upload the file.', 'bot');\n    }\n\n    setSelectedFile(null); // Clear the selected file\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"chat-window\">\n        <ul className=\"messages-list\">\n          {messages.map((message, index) => (\n            <li key={index} className={`message ${message.sender}`}>\n              {message.text}\n            </li>\n          ))}\n          <div ref={messagesEndRef} />\n        </ul>\n        <form onSubmit={handleSubmit} className=\"input-area\">\n          <input\n            type=\"text\"\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            placeholder=\"Type your message...\"\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n        <div className=\"file-upload-area\">\n          <input type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} />\n          <button onClick={handleFileUpload}>Upload PDF</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}